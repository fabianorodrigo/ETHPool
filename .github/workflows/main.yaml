name: ETHPool CI/CD

on:
  [push]
env:
  NETWORK: $NETWORK
  RPC_URL_ZNX_TESTNET: $RPC_URL_ZNX_TESTNET
  RPC_URL_ZNX_MAINNET: $RPC_URL_ZNX_MAINNET
  MNEMONIC: $MNEMONIC
  ROPSTEN_URL: $ROPSTEN_URL
jobs:
  build_test:
    name: Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit == false }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install
        working-directory: ./
      - name: Build
        run: npm run build
        working-directory: ./
      - name: Run tests
        run: npm run test
        working-directory: ./
      - name: ls
        run: ls -la
        working-directory: ./
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          working-directory: ./
          name: Hardhat Tests         # Name of the check run which will be created
          path: reports/test-contract-results.xml    # Path to test results
          reporter: java-junit           # Format of test results        
  slither:
    # uses: ./.github/workflows/slither.yaml
    # with:
    #   slither_target: .//
    #   slither_config: .//slither.config.json
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run Slither
        uses: crytic/slither-action@v0.1.1
        id: slither
        continue-on-error: true
        with:
          sarif: results.sarif
          # slither-config: .//slither.config.json
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}
